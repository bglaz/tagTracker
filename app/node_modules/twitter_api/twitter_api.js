// Dependencies
var http = require('http');
var oauth_nonce = require('oauth_nonce');



var Twitter = function() {
 	this.keys = require('./config.js');
};

Twitter.prototype = {
	testFn: 	function() {
		generateOAuthHeader(this.keys);
	}
};

var generateOAuthHeader = function(keys,method,url,params) {

	var method = method || "POST";
	var url = url || "https://stream.twitter.com/1.1/statuses/filter.json";
	var params = params || {track: 'cows'};

	//following documentation detailed here: https://dev.twitter.com/docs/auth/creating-signature

	var header_params = {
		oauth_consumer_key: 		keys.consumer_key,
		oauth_nonce: 				oauth_nonce(),
		oauth_signature_method: 	"HMAC_SHA1",
		oauth_timestamp: 			+ new Date(),
		oauth_version: 				"1.0",
		oauth_token: 				keys.token
	};

	//add in user's params
	if(params && typeof params == "object") {
		for(var i in params) {
			header_params[i] = params[i];
		}
	}

	//encode values
	for(var i in header_params) {
		header_params[i] = encodeURIComponent(header_params[i]); 
	}

	//sort by alpha
	var sortedKeys = sortObjectKeys(header_params);

	//create param string
	var paramString = '';

	for(var i = 0, len = sortedKeys.length; i < len; i++) {
		paramString += sortedKeys[i] + '=' + header_params[sortedKeys[i]];
		if(i != len-1) {
			paramString += '&';
		}
	};

	//create signature base string
	var sigBaseString = method.toUpperCase() + '&' + encodeURIComponent(url) + '&' + encodeURIComponent(paramString);

	console.log(sigBaseString);
};

var sortObjectKeys = function(obj) {
	var results = [];
	for(var key in obj) {
		results.push(key);
	}
	return results.sort();
}

module.exports = exports =  new Twitter();